Enter an Expression
Lexer Output
num_k 12
+
num_k 14
/
num_k 65
-
num_k 20
*
num_k 30
\n
Parser Output
0ARRAY(0x1fbf650)1
0HASH(0x1fbe9a8)3
0HASH(0x1fbe9a8)3ARRAY(0x1fca670)5
0HASH(0x1fbe9a8)3ARRAY(0x1fca670)5ARRAY(0x1fca688)1
0HASH(0x1fbe9a8)3ARRAY(0x1fca670)5HASH(0x1fca7a8)10
0HASH(0x1fbe9a8)3ARRAY(0x1fca670)5HASH(0x1fca7a8)10ARRAY(0x1fca6a0)8
0HASH(0x1fbe9a8)3ARRAY(0x1fca670)5HASH(0x1fca7a8)10ARRAY(0x1fca6a0)8ARRAY(0x1fca6b8)1
0HASH(0x1fbe9a8)3ARRAY(0x1fca670)5HASH(0x1fca7a8)10ARRAY(0x1fca6a0)8HASH(0x1fca898)13
0HASH(0x1fbe9a8)3ARRAY(0x1fca670)5HASH(0x1fbe8b8)10
0HASH(0x1fcaa48)3
0HASH(0x1fcaa48)3ARRAY(0x1fca6d0)6
0HASH(0x1fcaa48)3ARRAY(0x1fca6d0)6ARRAY(0x1fca6e8)1
0HASH(0x1fcaa48)3ARRAY(0x1fca6d0)6HASH(0x1fca988)11
0HASH(0x1fcaa48)3ARRAY(0x1fca6d0)6HASH(0x1fca988)11ARRAY(0x1fca700)7
0HASH(0x1fcaa48)3ARRAY(0x1fca6d0)6HASH(0x1fca988)11ARRAY(0x1fca700)7ARRAY(0x1fca718)1
0HASH(0x1fcaa48)3ARRAY(0x1fca6d0)6HASH(0x1fca988)11ARRAY(0x1fca700)7HASH(0x1f99b50)12
0HASH(0x1fcaa48)3ARRAY(0x1fca6d0)6HASH(0x1f99ad8)11
0HASH(0x1f99d00)3
0HASH(0x1f99d00)3ARRAY(0x1fca730)9
0HASH(0x1fbeb10)2
0HASH(0x1fbeb10)2ARRAY(0x1fca748)4
Complete
Tree Traversal
0 0 input 
1 1 expr - 
2 1 expr + 
3 1 expr num_k12 
3 2 expr / 
4 1 expr num_k14 
4 2 expr num_k65 
2 2 expr * 
3 1 expr num_k20 
3 2 expr num_k30 
